{"ast":null,"code":"var _jsxFileName = \"/Users/coycrowder/MIS 321/321Project/Coyson/src/ProtectedRoute.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useUser } from './UserContext';\nimport { Navigate } from 'react-router-dom';\nimport { useAdminAuth } from './AdminAuthenticateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useUser();\n  return user !== null && user !== void 0 && user.id ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 32\n  }, this);\n};\n_s(CartProtectedRoute, \"Q+JCVIy3JH0MXpFK+vm68eAxsAY=\", false, function () {\n  return [useUser];\n});\n_c = CartProtectedRoute;\nexport const LoginProtectedRoute = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useUser();\n  return !(user !== null && user !== void 0 && user.id) ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 33\n  }, this);\n};\n_s2(LoginProtectedRoute, \"Q+JCVIy3JH0MXpFK+vm68eAxsAY=\", false, function () {\n  return [useUser];\n});\n_c2 = LoginProtectedRoute;\nexport const AdminProtectedRoute = ({\n  children\n}) => {\n  _s3();\n  const [isVerifying, setIsVerifying] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const checkToken = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const token = await getIdToken(user);\n          if (token) {\n            setIsAuthenticated(true);\n          }\n        } catch (err) {\n          console.error('Token error:', err);\n        }\n      }\n      setIsVerifying(false);\n    };\n    checkToken();\n  }, []);\n  if (isVerifying) {\n    return null; // or a loading spinner\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/admin/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 39\n  }, this);\n};\n_s3(AdminProtectedRoute, \"IZMtFIigOVXrNgY1leftnuzcKww=\");\n_c3 = AdminProtectedRoute;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CartProtectedRoute\");\n$RefreshReg$(_c2, \"LoginProtectedRoute\");\n$RefreshReg$(_c3, \"AdminProtectedRoute\");","map":{"version":3,"names":["useUser","Navigate","useAdminAuth","jsxDEV","_jsxDEV","CartProtectedRoute","children","_s","user","id","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoginProtectedRoute","_s2","_c2","AdminProtectedRoute","_s3","isVerifying","setIsVerifying","useState","isAuthenticated","setIsAuthenticated","useEffect","checkToken","auth","currentUser","token","getIdToken","err","console","error","_c3","$RefreshReg$"],"sources":["/Users/coycrowder/MIS 321/321Project/Coyson/src/ProtectedRoute.js"],"sourcesContent":["import { useUser } from './UserContext';\nimport { Navigate } from 'react-router-dom';\nimport { useAdminAuth } from './AdminAuthenticateContext';\n\nexport const CartProtectedRoute = ({ children }) => {\n  const { user } = useUser();\n\n  return user?.id ? children : <Navigate to=\"/login\" replace />;\n};\n\nexport const LoginProtectedRoute = ({ children }) => {\n  const { user } = useUser();\n\n  return !user?.id ? children : <Navigate to=\"/\" replace />;\n};\n\nexport const AdminProtectedRoute = ({ children }) => {\n  const [isVerifying, setIsVerifying] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const checkToken = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const token = await getIdToken(user);\n          if (token) {\n            setIsAuthenticated(true);\n          }\n        } catch (err) {\n          console.error('Token error:', err);\n        }\n      }\n      setIsVerifying(false);\n    };\n\n    checkToken();\n  }, []);\n\n  if (isVerifying) {\n    return null; // or a loading spinner\n  }\n\n  return isAuthenticated ? children : <Navigate to=\"/admin/login\" />;\n};"],"mappings":";;;;AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE1B,OAAOQ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,EAAE,GAAGH,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACR,EAAA,CAJWF,kBAAkB;EAAA,QACZL,OAAO;AAAA;AAAAgB,EAAA,GADbX,kBAAkB;AAM/B,OAAO,MAAMY,mBAAmB,GAAGA,CAAC;EAAEX;AAAS,CAAC,KAAK;EAAAY,GAAA;EACnD,MAAM;IAAEV;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE1B,OAAO,EAACQ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,EAAE,IAAGH,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC,GAAG;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D,CAAC;AAACG,GAAA,CAJWD,mBAAmB;EAAA,QACbjB,OAAO;AAAA;AAAAmB,GAAA,GADbF,mBAAmB;AAMhC,OAAO,MAAMG,mBAAmB,GAAGA,CAAC;EAAEd;AAAS,CAAC,KAAK;EAAAe,GAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAE7DG,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMpB,IAAI,GAAGqB,IAAI,CAACC,WAAW;MAC7B,IAAItB,IAAI,EAAE;QACR,IAAI;UACF,MAAMuB,KAAK,GAAG,MAAMC,UAAU,CAACxB,IAAI,CAAC;UACpC,IAAIuB,KAAK,EAAE;YACTL,kBAAkB,CAAC,IAAI,CAAC;UAC1B;QACF,CAAC,CAAC,OAAOO,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;QACpC;MACF;MACAV,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,WAAW,EAAE;IACf,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,OAAOG,eAAe,GAAGnB,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC;EAAc;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpE,CAAC;AAACM,GAAA,CA5BWD,mBAAmB;AAAAgB,GAAA,GAAnBhB,mBAAmB;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}