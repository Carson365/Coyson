{"ast":null,"code":"export let booksByGenre = {};\nconst cleanBookData = (book, category) => {\n  var _book$authors, _book$imageLinks;\n  return {\n    title: (book === null || book === void 0 ? void 0 : book.title) || \"Unavailable\",\n    subtitle: (book === null || book === void 0 ? void 0 : book.subtitle) || \"Unavailable\",\n    authors: book !== null && book !== void 0 && (_book$authors = book.authors) !== null && _book$authors !== void 0 && _book$authors.length ? book.authors.join(\", \") : \"Unavailable\",\n    publisher: (book === null || book === void 0 ? void 0 : book.publisher) || \"Unavailable\",\n    description: (book === null || book === void 0 ? void 0 : book.description) || \"Unavailable\",\n    pageCount: (book === null || book === void 0 ? void 0 : book.pageCount) || \"Unavailable\",\n    categories: category || \"Unavailable\",\n    rating: (book === null || book === void 0 ? void 0 : book.averageRating) || \"Unavailable\",\n    maturityRating: (book === null || book === void 0 ? void 0 : book.maturityRating) || \"Unavailable\",\n    image: (book === null || book === void 0 ? void 0 : (_book$imageLinks = book.imageLinks) === null || _book$imageLinks === void 0 ? void 0 : _book$imageLinks.thumbnail) || \"Unavailable\"\n  };\n};\nexport const fetchBooksByGenre = async (genre, batchSize) => {\n  let booksFetched = 0;\n  let startIndex = 0;\n  if (!booksByGenre[genre]) {\n    booksByGenre[genre] = [];\n  }\n  while (booksFetched < batchSize) {\n    const remainingBooks = batchSize - booksFetched;\n    const currentBatchSize = Math.min(remainingBooks, 40);\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=subject:${encodeURIComponent(genre)}&maxResults=${currentBatchSize}&startIndex=${startIndex}`);\n      const data = await response.json();\n      if (!data.items || data.items.length === 0) break;\n      data.items.forEach(item => {\n        if (!item.volumeInfo) return;\n        const cleanedBook = cleanBookData(item.volumeInfo, genre);\n        booksByGenre[genre].push(cleanedBook);\n        booksFetched++;\n      });\n      startIndex += currentBatchSize;\n    } catch (error) {\n      console.error(`Error fetching books for genre \"${genre}\":`, error);\n      break;\n    }\n  }\n  console.log(`Fetched books for genre: ${genre}`, booksByGenre[genre]);\n  return booksByGenre; // Return the updated dictionary\n};","map":{"version":3,"names":["booksByGenre","cleanBookData","book","category","_book$authors","_book$imageLinks","title","subtitle","authors","length","join","publisher","description","pageCount","categories","rating","averageRating","maturityRating","image","imageLinks","thumbnail","fetchBooksByGenre","genre","batchSize","booksFetched","startIndex","remainingBooks","currentBatchSize","Math","min","response","fetch","encodeURIComponent","data","json","items","forEach","item","volumeInfo","cleanedBook","push","error","console","log"],"sources":["/Users/coycrowder/MIS 321/react/my-app/src/Api.js"],"sourcesContent":["export let booksByGenre = {};\n\nconst cleanBookData = (book, category) => {\n  return {\n    title: book?.title || \"Unavailable\",\n    subtitle: book?.subtitle || \"Unavailable\",\n    authors: book?.authors?.length ? book.authors.join(\", \") : \"Unavailable\",\n    publisher: book?.publisher || \"Unavailable\",\n    description: book?.description || \"Unavailable\",\n    pageCount: book?.pageCount || \"Unavailable\",\n    categories: category || \"Unavailable\", \n    rating: book?.averageRating || \"Unavailable\",\n    maturityRating: book?.maturityRating || \"Unavailable\",\n    image: book?.imageLinks?.thumbnail || \"Unavailable\",\n  };\n};\n\nexport const fetchBooksByGenre = async (genre, batchSize) => {\n  let booksFetched = 0;\n  let startIndex = 0;\n\n  if (!booksByGenre[genre]) {\n    booksByGenre[genre] = [];\n  }\n\n  while (booksFetched < batchSize) {\n    const remainingBooks = batchSize - booksFetched;\n    const currentBatchSize = Math.min(remainingBooks, 40);\n\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=subject:${encodeURIComponent(genre)}&maxResults=${currentBatchSize}&startIndex=${startIndex}`\n      );\n\n      const data = await response.json();\n\n      if (!data.items || data.items.length === 0) break;\n\n      data.items.forEach(item => {\n        if (!item.volumeInfo) return;\n\n        const cleanedBook = cleanBookData(item.volumeInfo, genre);\n        booksByGenre[genre].push(cleanedBook);\n        booksFetched++;\n      });\n\n      startIndex += currentBatchSize;\n    } catch (error) {\n      console.error(`Error fetching books for genre \"${genre}\":`, error);\n      break;\n    }\n  }\n\n  console.log(`Fetched books for genre: ${genre}`, booksByGenre[genre]);\n  return booksByGenre; // Return the updated dictionary\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}