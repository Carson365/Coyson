{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, OAuthProvider } from 'firebase/auth';\nimport { getAnalytics } from 'firebase/analytics';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDcHoB13UuElt-h9hoSBZyIXoM-EtjgZQM',\n  authDomain: 'rd-and-chester.firebaseapp.com',\n  projectId: 'rd-and-chester',\n  storageBucket: 'rd-and-chester.appspot.com',\n  messagingSenderId: '822055686354',\n  appId: '1:822055686354:web:bb6256789aa6cd01eedd0b',\n  measurementId: 'G-HMZQQS243G'\n};\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\n\n// Google provider (if needed)\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\n\n// Microsoft provider\nexport const microsoftProvider = new OAuthProvider('microsoft.com');\nmicrosoftProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport { auth };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","OAuthProvider","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","googleProvider","setCustomParameters","prompt","microsoftProvider"],"sources":["/Users/coycrowder/MIS 321/321Project/Coyson/src/FireBase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, OAuthProvider } from 'firebase/auth';\nimport { getAnalytics } from 'firebase/analytics';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDcHoB13UuElt-h9hoSBZyIXoM-EtjgZQM',\n  authDomain: 'rd-and-chester.firebaseapp.com',\n  projectId: 'rd-and-chester',\n  storageBucket: 'rd-and-chester.appspot.com',\n  messagingSenderId: '822055686354',\n  appId: '1:822055686354:web:bb6256789aa6cd01eedd0b',\n  measurementId: 'G-HMZQQS243G'\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst auth = getAuth(app);\n\n// Google provider (if needed)\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\n\n// Microsoft provider\nexport const microsoftProvider = new OAuthProvider('microsoft.com');\nmicrosoftProvider.setCustomParameters({\n  prompt: 'select_account'\n});\n\nexport { auth };"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,aAAa,QAAQ,eAAe;AAC1E,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGb,aAAa,CAACK,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGV,YAAY,CAACS,GAAG,CAAC;AAEnC,MAAME,IAAI,GAAGd,OAAO,CAACY,GAAG,CAAC;;AAEzB;AACA,OAAO,MAAMG,cAAc,GAAG,IAAId,kBAAkB,CAAC,CAAC;AACtDc,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,iBAAiB,GAAG,IAAIhB,aAAa,CAAC,eAAe,CAAC;AACnEgB,iBAAiB,CAACF,mBAAmB,CAAC;EACpCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,SAASH,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}