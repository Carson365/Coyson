{"ast":null,"code":"import { booksByGenre } from '../Api.js';\nconst SearchList = ({\n  input\n}) => {\n  let arrayOfBooks = SearchThroughBooks(input);\n  console.log(arrayOfBooks);\n};\n_c = SearchList;\nconst SearchThroughBooks = (input, booksByGenre) => {\n  const scoredBooks = [];\n  booksByGenre.forEach(genre => {\n    genre.forEach(book => {\n      const score = getSimilarityScore(input, book);\n      scoredBooks.push({\n        ...book,\n        score\n      });\n    });\n  });\n  scoredBooks.sort((a, b) => b.score - a.score);\n  return scoredBooks;\n};\n_c2 = SearchThroughBooks;\nfunction getSimilarityScore(input, book) {\n  var _book$authors;\n  const normalize = str => (str === null || str === void 0 ? void 0 : str.toLowerCase().trim()) || '';\n  const inputNormalized = normalize(input);\n  const title = normalize(book.title);\n  const genre = normalize(book.categories);\n  const authors = normalize((_book$authors = book.authors) === null || _book$authors === void 0 ? void 0 : _book$authors.join(', '));\n  const titleScore = partialRatio(inputNormalized, title);\n  const genreScore = partialRatio(inputNormalized, genre);\n  const authorScore = partialRatio(inputNormalized, authors);\n\n  // Weighted average (tweak as needed)\n  return 0.5 * titleScore + 0.3 * authorScore + 0.2 * genreScore;\n}\nfunction partialRatio(a, b) {\n  if (a.length > b.length) [a, b] = [b, a];\n  let maxScore = 0;\n  for (let i = 0; i <= b.length - a.length; i++) {\n    const window = b.substr(i, a.length);\n    const score = levenshteinSimilarity(a, window);\n    maxScore = Math.max(maxScore, score);\n  }\n  return maxScore;\n}\nfunction levenshteinSimilarity(a, b) {\n  const distance = levenshtein(a, b);\n  const maxLen = Math.max(a.length, b.length);\n  return maxLen === 0 ? 1 : 1 - distance / maxLen;\n}\nfunction levenshtein(a, b) {\n  const matrix = Array.from({\n    length: a.length + 1\n  }, () => Array(b.length + 1).fill(0));\n  for (let i = 0; i <= a.length; i++) matrix[i][0] = i;\n  for (let j = 0; j <= b.length; j++) matrix[0][j] = j;\n  for (let i = 1; i <= a.length; i++) {\n    for (let j = 1; j <= b.length; j++) {\n      matrix[i][j] = Math.min(matrix[i - 1][j] + 1, matrix[i][j - 1] + 1, matrix[i - 1][j - 1] + (a[i - 1] === b[j - 1] ? 0 : 1));\n    }\n  }\n  return matrix[a.length][b.length];\n}\nexport default SearchList;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchList\");\n$RefreshReg$(_c2, \"SearchThroughBooks\");","map":{"version":3,"names":["booksByGenre","SearchList","input","arrayOfBooks","SearchThroughBooks","console","log","_c","scoredBooks","forEach","genre","book","score","getSimilarityScore","push","sort","a","b","_c2","_book$authors","normalize","str","toLowerCase","trim","inputNormalized","title","categories","authors","join","titleScore","partialRatio","genreScore","authorScore","length","maxScore","i","window","substr","levenshteinSimilarity","Math","max","distance","levenshtein","maxLen","matrix","Array","from","fill","j","min","$RefreshReg$"],"sources":["/Users/coycrowder/MIS 321/321Project/Coyson/src/Components/SearchList.jsx"],"sourcesContent":["import { booksByGenre } from '../Api.js'\n\nconst SearchList = ({ input }) => {\n    let arrayOfBooks = SearchThroughBooks(input);\n\n    console.log(arrayOfBooks);\n}\n\nconst SearchThroughBooks = (input, booksByGenre) => {\n    const scoredBooks = [];\n  \n    booksByGenre.forEach(genre => {\n      genre.forEach(book => {\n        const score = getSimilarityScore(input, book);\n        scoredBooks.push({ ...book, score });\n      });\n    });\n  \n    scoredBooks.sort((a, b) => b.score - a.score);\n  \n    return scoredBooks;\n  };\n  \n\nfunction getSimilarityScore(input, book) {\n    const normalize = str => str?.toLowerCase().trim() || '';\n  \n    const inputNormalized = normalize(input);\n    const title = normalize(book.title);\n    const genre = normalize(book.categories);\n    const authors = normalize(book.authors?.join(', '));\n  \n    const titleScore = partialRatio(inputNormalized, title);\n    const genreScore = partialRatio(inputNormalized, genre);\n    const authorScore = partialRatio(inputNormalized, authors);\n  \n    // Weighted average (tweak as needed)\n    return (0.5 * titleScore) + (0.3 * authorScore) + (0.2 * genreScore);\n  }\n  \n\nfunction partialRatio(a, b) {\n    if (a.length > b.length) [a, b] = [b, a];\n  \n    let maxScore = 0;\n    for (let i = 0; i <= b.length - a.length; i++) {\n      const window = b.substr(i, a.length);\n      const score = levenshteinSimilarity(a, window);\n      maxScore = Math.max(maxScore, score);\n    }\n    return maxScore;\n  }\n  \n  function levenshteinSimilarity(a, b) {\n    const distance = levenshtein(a, b);\n    const maxLen = Math.max(a.length, b.length);\n    return maxLen === 0 ? 1 : (1 - distance / maxLen);\n  }\n  \n  function levenshtein(a, b) {\n    const matrix = Array.from({ length: a.length + 1 }, () =>\n      Array(b.length + 1).fill(0)\n    );\n  \n    for (let i = 0; i <= a.length; i++) matrix[i][0] = i;\n    for (let j = 0; j <= b.length; j++) matrix[0][j] = j;\n  \n    for (let i = 1; i <= a.length; i++) {\n      for (let j = 1; j <= b.length; j++) {\n        matrix[i][j] = Math.min(\n          matrix[i - 1][j] + 1,\n          matrix[i][j - 1] + 1,\n          matrix[i - 1][j - 1] + (a[i - 1] === b[j - 1] ? 0 : 1)\n        );\n      }\n    }\n  \n    return matrix[a.length][b.length];\n  }\n  \n\nexport default SearchList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}