{"ast":null,"code":"var _jsxFileName = \"/Users/coycrowder/MIS 321/321Project/Coyson/src/Components/SearchList.jsx\",\n  _s = $RefreshSig$();\nimport { booksByGenre } from '../Api.js';\nimport Card from './Card.jsx';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchList = ({\n  input\n}) => {\n  _s();\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  useEffect(() => {\n    if (!input) {\n      setFilteredBooks([]);\n      return;\n    }\n    const delayDebounce = setTimeout(() => {\n      const flatBooks = Object.values(booksByGenre).flat();\n      const scoredBooks = flatBooks.map(book => ({\n        ...book,\n        score: getSimilarityScore(input, book)\n      }));\n      scoredBooks.sort((a, b) => b.score - a.score);\n      setFilteredBooks(scoredBooks.slice(0, 25));\n    }, 300); // Wait 300ms after user stops typing\n\n    return () => clearTimeout(delayDebounce); // Clear timeout if input changes\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-grid\",\n    children: filteredBooks.map((book, index) => /*#__PURE__*/_jsxDEV(Card, {\n      book: book\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(SearchList, \"hvNVZ27hVawvLa0SVIUFTANu+pI=\");\n_c = SearchList;\nexport const SearchThroughBooks = input => {\n  const scoredBooks = [];\n  Object.keys(booksByGenre).forEach(genre => {\n    booksByGenre[genre].forEach(book => {\n      const score = getSimilarityScore(input, book); // your custom scoring logic\n      scoredBooks.push({\n        ...book,\n        score\n      });\n    });\n  });\n  scoredBooks.sort((a, b) => b.score - a.score);\n  return scoredBooks;\n};\n_c2 = SearchThroughBooks;\nfunction getSimilarityScore(input, book) {\n  const normalize = str => {\n    if (Array.isArray(str)) {\n      // Join array elements into a string and normalize\n      return str.join(', ').toLowerCase().trim();\n    }\n\n    // Ensure it's a string, otherwise treat it as an empty string\n    return (typeof str === 'string' ? str : '').toLowerCase().trim();\n  };\n  const inputNormalized = normalize(input);\n  const title = normalize(book.title); // Ensure this is a string\n  const genre = normalize(book.categories); // Ensure this is a string\n  const authors = normalize(book.authors); // Ensure this is a string (handles arrays)\n\n  const titleScore = partialRatio(inputNormalized, title);\n  const genreScore = partialRatio(inputNormalized, genre);\n  const authorScore = partialRatio(inputNormalized, authors);\n\n  // Weighted average (tweak as needed)\n  return 0.5 * titleScore + 0.3 * authorScore + 0.2 * genreScore;\n}\nfunction partialRatio(a, b) {\n  if (a.length > b.length) [a, b] = [b, a];\n  let maxScore = 0;\n  for (let i = 0; i <= b.length - a.length; i++) {\n    const window = b.substr(i, a.length);\n    const score = levenshteinSimilarity(a, window);\n    maxScore = Math.max(maxScore, score);\n  }\n  return maxScore;\n}\nfunction levenshteinSimilarity(a, b) {\n  const distance = levenshtein(a, b);\n  const maxLen = Math.max(a.length, b.length);\n  return maxLen === 0 ? 1 : 1 - distance / maxLen;\n}\nfunction levenshtein(a, b) {\n  const matrix = Array.from({\n    length: a.length + 1\n  }, () => Array(b.length + 1).fill(0));\n  for (let i = 0; i <= a.length; i++) matrix[i][0] = i;\n  for (let j = 0; j <= b.length; j++) matrix[0][j] = j;\n  for (let i = 1; i <= a.length; i++) {\n    for (let j = 1; j <= b.length; j++) {\n      matrix[i][j] = Math.min(matrix[i - 1][j] + 1, matrix[i][j - 1] + 1, matrix[i - 1][j - 1] + (a[i - 1] === b[j - 1] ? 0 : 1));\n    }\n  }\n  return matrix[a.length][b.length];\n}\nexport default SearchList;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchList\");\n$RefreshReg$(_c2, \"SearchThroughBooks\");","map":{"version":3,"names":["booksByGenre","Card","React","useState","useEffect","jsxDEV","_jsxDEV","SearchList","input","_s","filteredBooks","setFilteredBooks","delayDebounce","setTimeout","flatBooks","Object","values","flat","scoredBooks","map","book","score","getSimilarityScore","sort","a","b","slice","clearTimeout","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","SearchThroughBooks","keys","forEach","genre","push","_c2","normalize","str","Array","isArray","join","toLowerCase","trim","inputNormalized","title","categories","authors","titleScore","partialRatio","genreScore","authorScore","length","maxScore","i","window","substr","levenshteinSimilarity","Math","max","distance","levenshtein","maxLen","matrix","from","fill","j","min","$RefreshReg$"],"sources":["/Users/coycrowder/MIS 321/321Project/Coyson/src/Components/SearchList.jsx"],"sourcesContent":["import { booksByGenre } from '../Api.js'\nimport Card from './Card.jsx'\nimport React, { useState, useEffect } from 'react';\n\n\nconst SearchList = ({ input }) => {\n    const [filteredBooks, setFilteredBooks] = useState([]);\n  \n    useEffect(() => {\n      if (!input) {\n        setFilteredBooks([]);\n        return;\n      }\n  \n      const delayDebounce = setTimeout(() => {\n        const flatBooks = Object.values(booksByGenre).flat();\n  \n        const scoredBooks = flatBooks.map(book => ({\n          ...book,\n          score: getSimilarityScore(input, book),\n        }));\n  \n        scoredBooks.sort((a, b) => b.score - a.score);\n        setFilteredBooks(scoredBooks.slice(0, 25));\n      }, 300); // Wait 300ms after user stops typing\n  \n      return () => clearTimeout(delayDebounce); // Clear timeout if input changes\n    }, [input]);\n  \n    return (\n      <div className=\"book-grid\">\n        {filteredBooks.map((book, index) => (\n          <Card key={index} book={book} />\n        ))}\n      </div>\n    );\n  };\n\nexport const SearchThroughBooks = (input) => {\n    const scoredBooks = [];\n  \n    Object.keys(booksByGenre).forEach((genre) => {\n      booksByGenre[genre].forEach((book) => {\n        const score = getSimilarityScore(input, book); // your custom scoring logic\n        scoredBooks.push({ ...book, score });\n      });\n    });\n  \n    scoredBooks.sort((a, b) => b.score - a.score);\n\n    return scoredBooks;\n  };\n\n  function getSimilarityScore(input, book) {\n    const normalize = str => {\n      if (Array.isArray(str)) {\n        // Join array elements into a string and normalize\n        return str.join(', ').toLowerCase().trim();\n      }\n  \n      // Ensure it's a string, otherwise treat it as an empty string\n      return (typeof str === 'string' ? str : '').toLowerCase().trim();\n    };\n  \n    const inputNormalized = normalize(input);\n    const title = normalize(book.title);  // Ensure this is a string\n    const genre = normalize(book.categories);  // Ensure this is a string\n    const authors = normalize(book.authors);  // Ensure this is a string (handles arrays)\n  \n    const titleScore = partialRatio(inputNormalized, title);\n    const genreScore = partialRatio(inputNormalized, genre);\n    const authorScore = partialRatio(inputNormalized, authors);\n  \n    // Weighted average (tweak as needed)\n    return (0.5 * titleScore) + (0.3 * authorScore) + (0.2 * genreScore);\n  }  \n  \n\nfunction partialRatio(a, b) {\n    if (a.length > b.length) [a, b] = [b, a];\n  \n    let maxScore = 0;\n    for (let i = 0; i <= b.length - a.length; i++) {\n      const window = b.substr(i, a.length);\n      const score = levenshteinSimilarity(a, window);\n      maxScore = Math.max(maxScore, score);\n    }\n    return maxScore;\n  }\n  \n  function levenshteinSimilarity(a, b) {\n    const distance = levenshtein(a, b);\n    const maxLen = Math.max(a.length, b.length);\n    return maxLen === 0 ? 1 : (1 - distance / maxLen);\n  }\n  \n  function levenshtein(a, b) {\n    const matrix = Array.from({ length: a.length + 1 }, () =>\n      Array(b.length + 1).fill(0)\n    );\n  \n    for (let i = 0; i <= a.length; i++) matrix[i][0] = i;\n    for (let j = 0; j <= b.length; j++) matrix[0][j] = j;\n  \n    for (let i = 1; i <= a.length; i++) {\n      for (let j = 1; j <= b.length; j++) {\n        matrix[i][j] = Math.min(\n          matrix[i - 1][j] + 1,\n          matrix[i][j - 1] + 1,\n          matrix[i - 1][j - 1] + (a[i - 1] === b[j - 1] ? 0 : 1)\n        );\n      }\n    }\n  \n    return matrix[a.length][b.length];\n  }\n  \n\nexport default SearchList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}