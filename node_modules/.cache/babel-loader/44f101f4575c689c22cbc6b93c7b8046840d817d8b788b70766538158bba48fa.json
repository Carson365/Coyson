{"ast":null,"code":"var _jsxFileName = \"/Users/coycrowder/MIS 321/react/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card.jsx';\nimport Navbar from './Navbar.jsx';\nimport { fetchFictionBooks } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [books, setBooks] = useState([]); // State to hold books\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const fetchedBooks = await fetchFictionBooks(10); // Fetch 10 books\n      setBooks(fetchedBooks); // Update the state with the fetched books\n    };\n    fetchBooks(); // Fetch books when the component mounts\n  }, []); // Empty dependency array means it runs once when the component is mounted\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), books.length > 0 ? /*#__PURE__*/_jsxDEV(Card, {\n      book: books[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) // Render the first book\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) // Show loading text while fetching books\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","Navbar","fetchFictionBooks","jsxDEV","_jsxDEV","App","_s","books","setBooks","fetchBooks","fetchedBooks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","book","_c","$RefreshReg$"],"sources":["/Users/coycrowder/MIS 321/react/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card.jsx';\nimport Navbar from './Navbar.jsx';\nimport { fetchFictionBooks } from './api';\n\nfunction App() {\n  const [books, setBooks] = useState([]); // State to hold books\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const fetchedBooks = await fetchFictionBooks(10); // Fetch 10 books\n      setBooks(fetchedBooks); // Update the state with the fetched books\n    };\n\n    fetchBooks(); // Fetch books when the component mounts\n  }, []); // Empty dependency array means it runs once when the component is mounted\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {books.length > 0 ? (\n        <Card book={books[0]} /> // Render the first book\n      ) : (\n        <p>Loading books...</p> // Show loading text while fetching books\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,iBAAiB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,YAAY,GAAG,MAAMR,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;MAClDM,QAAQ,CAACE,YAAY,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEDD,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTT,KAAK,CAACU,MAAM,GAAG,CAAC,gBACfb,OAAA,CAACJ,IAAI;MAACkB,IAAI,EAAEX,KAAK,CAAC,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAEzBZ,OAAA;MAAAQ,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACV,EAAA,CAtBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}